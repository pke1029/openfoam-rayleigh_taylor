/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      alpha.water;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   #codeStream
{
    codeInclude
    #{
        #include "fvCFD.H"
    #};

    codeOptions
    #{
        -I$(LIB_SRC)/finiteVolume/lnInclude \
        -I$(LIB_SRC)/meshTools/lnInclude
    #};

    codeLibs
    #{
        -lmeshTools \
        -lfiniteVolume
    #};

    code
    #{
        const IOdictionary& d = static_cast<const IOdictionary&>(dict);
        const fvMesh& mesh = refCast<const fvMesh>(d.db());

        scalarField alpha(mesh.nCells(), 0.);

        forAll(alpha, i)
        {
        const scalar x = mesh.C()[i][0];
        const scalar y = mesh.C()[i][1];

        alpha[i] = 0.5 + 0.5*tanh((y+0.1*cos(2*constant::mathematical::pi*x))/(0.007*1.414));

        }

        alpha.writeEntry("", os);

    #};
};


boundaryField
{
    leftWall
    {
        type            symmetryPlane;
    }

    rightWall
    {
        type            symmetryPlane;
    }

    lowerWall
    {
        type            zeroGradient;
    }

    atmosphere
    {
        type            zeroGradient;
        // type            inletOutlet;
        // inletValue      uniform 1;
        // value           uniform 1;
    }

    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
